<?xml version="1.0" ?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<faces-config version="2.0" xmlns="http://java.sun.com/xml/ns/javaee"
              xmlns:tr="http://myfaces.apache.org/trinidad"
              xmlns:mfp="http://myfaces.apache.org/maven-faces-plugin"
              xmlns:fmd="http://java.sun.com/xml/ns/javaee/faces/design-time-metadata">
  <component>
    <component-type>javax.faces.Component</component-type>
    <component-class>javax.faces.component.UIComponent</component-class>
    <property>
      <description><![CDATA[<html>the identifier for the component.  Every component may be named by a component identifier that must conform to the following rules:
<ul>
<li>They must start with a letter (as defined by the Character.isLetter() method) or underscore ( _ ).</li>
<li>Subsequent characters must be letters (as defined by the Character.isLetter() method), digits as defined by the Character.isDigit() method, 
dashes ( - ), or underscores ( _ ).  To minimize the size of responses generated by JavaServer Faces, it is recommended that component identifiers 
be as short as possible. If a component has been given an identifier, it must be unique in the namespace of the closest ancestor to that component 
that is a NamingContainer (if any).</li>
</ul></html>]]>
      </description>
      <property-name>id</property-name>
      <property-class>java.lang.String</property-class>
      <property-extension>
        <fmd:property-metadata>
          <fmd:value-expression>PROHIBITED</fmd:value-expression>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
      <property-name>rendered</property-name>
      <property-class>boolean</property-class>
      <default-value>true</default-value>
      <property-extension>
        <mfp:property-metadata/>
        <fmd:property-metadata>
          <fmd:category-id>GENERAL</fmd:category-id>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description>an EL reference that will store the component instance on a
bean.  This can be used to give programmatic access to a component
from a backing bean, or to move creation of the component to a backing bean.</description>
      <property-name>binding</property-name>
      <property-class>javax.faces.component.UIComponent</property-class>
    </property>
    <property>
      <property-name>transient</property-name>
      <property-class>boolean</property-class>
      <property-extension>
        <mfp:transient>true</mfp:transient>
        <mfp:tag-attribute-excluded>true</mfp:tag-attribute-excluded>
        <mfp:property-metadata/>
        <fmd:property-metadata>
          <fmd:category-id>GENERAL</fmd:category-id>
          <fmd:value-expression>PROHIBITED</fmd:value-expression>
        </fmd:property-metadata>
      </property-extension>
    </property>
  </component>
</faces-config>
