/**
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
	   
**/
@import "simple-desktop.css";

@import "minimal-desktop.css";

/** A custom style sheet which overrides AFDefaultFontFamily **/
.AFLightAccentBackground:alias
{
  background-color: #e9e8e8;
}
/** The default font family **/
/** Removing font family as this doesn't seem to make a 
        difference and makes the stylesheet much bigger **/
.AFDefaultFontFamily:alias
{
  -tr-inhibit: font-family;
}
/** The default font **/
.AFDefaultFont:alias
{
  -tr-rule-ref: selector(".AFDefaultFontFamily:alias");
  font-size: 9pt;
}
/** The default bold font **/
.AFDefaultBoldFont:alias
{
  -tr-rule-ref: selector(".AFDefaultFont:alias");
  font-weight: bold;
}
/** A very small font **/
.AFVerySmallFont:alias
{
  -tr-rule-ref: selector(".AFDefaultFont:alias");
  font-size: -2pt;
}
/** A small font **/
.AFSmallFont:alias
{
  -tr-rule-ref: selector(".AFDefaultFont:alias");
  font-size: -1pt;
}
/** A medium font - just slightly bigger than default **/
.AFMediumFont:alias
{
  -tr-rule-ref: selector(".AFDefaultFont:alias");
  font-size: +1pt;
}
/** A large font **/
.AFLargeFont:alias
{
  -tr-rule-ref: selector(".AFDefaultFont:alias");
  font-size: +2pt;
}
/** A very large font **/
.AFVeryLargeFont:alias
{
  -tr-rule-ref: selector(".AFDefaultFont:alias");
  font-size: +3pt;
}
/** darken to make visible on lcd displays **/
.AFLightAccentBackground:alias
{
  background-color: #ffffcc;
}

.AFEndPadding:alias
{
  padding: 0px 2px 0px 0px;
}
/** set the text style on the body so that it doesn' **/
/** have to be repeated **/
BODY
{
  -tr-rule-ref: selector(".AFTextBackground:alias");
  -tr-rule-ref: selector(".AFDefaultFont:alias");
}
/** styles used in af|panelPage::privacy, copyright, and about **/
.AFFooterMessageText:alias
{
  text-align: center;
  -tr-inhibit: padding;
}

.AFFooterMessageLink:alias
{
  -tr-rule-ref: selector(".AFLinkForeground:alias");
}
/** Page Header Text **/
.OraGlobalPageTitle
{
  -tr-rule-ref: selector(".AFLargeFont:alias");
  -tr-rule-ref: selector(".AFDarkForeground:alias");
}
/** Header Text **/
/** for pda, this is the level-one style **/
.AFHeaderText:alias
{
  -tr-inhibit: padding;
  -tr-inhibit: border-style;
  -tr-inhibit: border-color;
  -tr-inhibit: border-width;
  font-weight: bold;
  -tr-rule-ref: selector(".AFDarkForeground:alias");
  margin-top: 0px;
}

.AFHeaderLevelTwo
{
  margin-top: 4px;
}

.AFHeaderLevelThreePlus
{
  -tr-rule-ref: selector(".AFSmallFont:alias");
  margin-top: 4px;
}

af|panelHeader::error
{
  margin-top: 0px;
}

af|messages::error
{
  -tr-rule-ref: selector(".AFDefaultFont:alias");
  -tr-rule-ref: selector(".AFErrorTextForeground:alias");
}

af|messages::header
{
  -tr-rule-ref: selector(".AFDefaultFont:alias");
  -tr-rule-ref: selector(".AFDarkForeground:alias");
}
/**PH:include styling for body background of a message box**/
af|messages::body
{
  -tr-rule-ref: selector(".AFLightAccentBackground:alias");
}
/** Page Sub Header Text TBD **/
/** Page Content Header TBD **/
/** Instruction Text == .AFInstructionText, OK **/
/** Text == AFDefaultFont OK **/
/** Subtext TBD **/
/** Label **/
.AFLabelText
{
  -tr-rule-ref: selector(".AFVerySmallFont:alias");
  font-weight: bold;
}
/** Label **/
.AFLabelTextDisabled
{
  -tr-rule-ref: selector(".AFVerySmallFont:alias");
  font-weight: bold;
}
/** Link == A:link, OraLinkText, OK **/
/** MicroLink == .OraGlobalButtonText..., Others? **/
/** Column Header == af|column::header-text, OK **/
/** Error! == OraErrorNameText, OK **/
/** Error Message Font == OraMessageBoxErrorText, OK **/
/** Help Text == OraInlineInfoText, OK **/
/** navigation bar styles shrunken **/
.OraNavBarActiveLink
{
  -tr-rule-ref: selector(".AFSmallFont:alias");
}

.OraNavBarInactiveLink
{
  -tr-rule-ref: selector(".AFSmallFont:alias");
}

.OraNavBarViewOnly
{
  -tr-rule-ref: selector(".AFSmallFont:alias");
  color: #000000;
}
/** menuButtons **/
af|menuButtons::text
{
  -tr-rule-ref: selector(".SmallLinkFont:alias");
  -tr-rule-ref: selector(".AFLinkForeground:alias");
  -tr-inhibit: padding;
  -tr-inhibit: vertical-align;
}
/** Can't change link color, so setting to bold **/
af|menuButtons::text-selected
{
  -tr-rule-ref: selector(".AFSmallFont:alias");
  -tr-rule-ref: selector(".AFDarkForeground:alias");
  font-weight: bold;
  -tr-inhibit: padding;
  -tr-inhibit: vertical-align;
}

af|menuButtons::text-disabled
{
  -tr-rule-ref: selector(".AFSmallFont:alias");
  -tr-rule-ref: selector(".AFVeryDarkAccentForeground:alias");
  -tr-inhibit: padding;
  -tr-inhibit: vertical-align;
}
/** styles used in af|panelPage::privacy, copyright, and about **/
.AFFooterMessageText:alias
{
  text-align: center;
  -tr-inhibit: padding;
}

.AFFooterMessageLink:alias
{
  -tr-rule-ref: selector(".AFLinkForeground:alias");
}

.OraCrumbsSelected
{
  -tr-rule-ref: selector(".AFVerySmallFont:alias");
}

.OraCrumbsEnabled
{
  -tr-rule-ref: selector(".VerySmallLinkFont:alias");
}
/** don't change font-size of disabled links **/
.p_OraDisabled
{
  -tr-inhibit: font-size;
}

.p_OraTabBar
{
  -tr-rule-ref: selector(".SmallLinkFont:alias");
  -tr-rule-ref: selector(".AFLightBackground:alias");
  -tr-inhibit: border-width;
  -tr-inhibit: border-style;
  -tr-inhibit: padding;
}

.p_OraGlobalHeader
{
  -tr-rule-ref: selector(".SmallLinkFont:alias");
  -tr-rule-ref: selector(".LightExtraAccentBackground:alias");
  -tr-rule-ref: selector(".AFTextForeground:alias");
}
/* jmw The below selectors should probably have dot in front of them,
but they didn't in the original xss file. I don't want to change anything during
the xss to css port. */
OraLinkSelected
{
  -tr-inhibit: background-color;
  -tr-inhibit: border-color;
}

OraLinkSelectedLink
{
  -tr-rule-ref: selector(".AFVeryDarkForeground:alias");
  text-decoration: none;
}

OraLinkSelectedActive
{
  -tr-rule-ref: selector(".AFVeryDarkForeground:alias");
  text-decoration: none;
}

OraLinkSelectedVisited
{
  -tr-rule-ref: selector(".AFVeryDarkForeground:alias");
  text-decoration: none;
}

OraLinkEnabled
{
  -tr-inhibit: background-color;
}

OraLinkEnabledLink
{
  -tr-rule-ref: selector(".AFVeryDarkForeground:alias");
  text-decoration: none;
}

OraLinkEnabledActive
{
  -tr-rule-ref: selector(".AFVeryDarkForeground:alias");
  text-decoration: none;
}

OraLinkEnabledVisited
{
  -tr-rule-ref: selector(".AFVeryDarkForeground:alias");
  text-decoration: none;
}

af|menuTabs::selected
{
  -tr-inhibit: background-color;
  -tr-inhibit: border-color;
}

af|menuTabs::selected-link
{
  -tr-rule-ref: selector(".AFVeryDarkForeground:alias");
  text-decoration: none;
}

af|menuTabs::selected-active
{
  -tr-rule-ref: selector(".AFVeryDarkForeground:alias");
  text-decoration: none;
}

af|menuTabs::selected-visited
{
  -tr-rule-ref: selector(".AFVeryDarkForeground:alias");
  text-decoration: none;
}

af|menuTabs::enabled
{
  -tr-inhibit: background-color;
}

af|menuTabs::enabled-link
{
  -tr-rule-ref: selector(".AFVeryDarkForeground:alias");
  text-decoration: none;
}

af|menuTabs::enabled-active
{
  -tr-rule-ref: selector(".AFVeryDarkForeground:alias");
  text-decoration: none;
}

af|menuTabs::enabled-visited
{
  -tr-rule-ref: selector(".AFVeryDarkForeground:alias");
  text-decoration: none;
}

af|menuBar::selected
{
  -tr-inhibit: background-color;
}

af|menuBar::selected-link
{
  -tr-rule-ref: selector(".AFVeryDarkForeground:alias");
  text-decoration: none;
}

af|menuBar::selected-active
{
  -tr-rule-ref: selector(".AFVeryDarkForeground:alias");
  text-decoration: none;
}

af|menuBar::selected-visited
{
  -tr-rule-ref: selector(".AFVeryDarkForeground:alias");
  text-decoration: none;
}

af|menuBar::enabled
{
  -tr-inhibit: background-color;
}

af|menuBar::enabled-link
{
  -tr-rule-ref: selector(".AFVeryDarkForeground:alias");
  text-decoration: none;
}

af|menuBar::enabled-active
{
  -tr-rule-ref: selector(".AFVeryDarkForeground:alias");
  text-decoration: none;
}

af|menuBar::enabled-visited
{
  -tr-rule-ref: selector(".AFVeryDarkForeground:alias");
  text-decoration: none;
}

af|table::control-bar-top
{
  -tr-inhibit: background-color;
  -tr-inhibit: border-style;
  -tr-inhibit: border-color;
  -tr-inhibit: padding;
}

af|treeTable::control-bar-top
{
  -tr-inhibit: background-color;
  -tr-inhibit: border-style;
  -tr-inhibit: border-color;
  -tr-inhibit: padding;
}

af|column::sortable-header-text
{
  border-width: 1px;
}
/** This style-class will be used by HTML basic browsers **/
af|showDetailItem::selected
{
  -tr-rule-ref: selector(".AFDefaultBoldFont:alias");
  -tr-rule-ref: selector(".AFDarkForeground:alias");
}

.OraButtonText
{
  -tr-rule-ref: selector(".AFSmallFont:alias");
  -tr-rule-ref: selector(".AFLightAccentBackground:alias");
  -tr-rule-ref: selector(".AFTextForeground:alias");
}

.AFFieldText
{
  -tr-rule-ref: selector(".AFSmallFont:alias");
}

.AFFieldTextDisabled
{
  -tr-rule-ref: selector(".AFSmallFont:alias");
}

.AFFieldNumber
{
  -tr-rule-ref: selector(".AFSmallFont:alias");
}

.AFFieldNumberDisabled
{
  -tr-rule-ref: selector(".AFSmallFont:alias");
}

.AFDataText
{
  -tr-rule-ref: selector(".AFSmallFont:alias");
}

.AFDataTextDisabled
{
  -tr-rule-ref: selector(".AFSmallFont:alias");
}

.AFDataNumber
{
  -tr-rule-ref: selector(".AFSmallFont:alias");
}

.AFDataNumberDisabled
{
  -tr-rule-ref: selector(".AFSmallFont:alias");
}

.AFPhoneFieldText
{
  -tr-rule-ref: selector(".AFSmallFont:alias");
}

.AFPhoneFieldTextDisabled
{
  -tr-rule-ref: selector(".AFSmallFont:alias");
}

.AFPostalCodeFieldText
{
  -tr-rule-ref: selector(".AFSmallFont:alias");
}

.AFPostalCodeFieldTextDisabled
{
  -tr-rule-ref: selector(".AFSmallFont:alias");
}

.AFAddressFieldText
{
  -tr-rule-ref: selector(".AFSmallFont:alias");
}

.AFAddressFieldTextDisabled
{
  -tr-rule-ref: selector(".AFSmallFont:alias");
}


@agent ie {
   @platform windows, ppc {

    /** use Tahoma for everything **/
    .AFDefaultFontFamily:alias {
      font-family: Tahoma;
    }
    
   .AFDefaultFont:alias {
      -tr-rule-ref: selector(".AFDefaultFontFamily:alias");
      font-size: x-small;
    }

    .AFVerySmallFont:alias {
      -tr-rule-ref: selector(".AFDefaultFont:alias");
      font-size: xx-small;
    }


    .AFSmallFont:alias {
      -tr-rule-ref: selector(".AFDefaultFont:alias");
      font-size: xx-small;
    }

    .AFMediumFont:alias {
      -tr-rule-ref: selector(".AFDefaultFont:alias");
      font-size: x-small;
    }

    .AFLargeFont:alias {
      -tr-rule-ref: selector(".AFDefaultFont:alias");
      font-size: small;
    }

    .AFVeryLargeFont:alias {
      -tr-rule-ref: selector(".AFDefaultFont:alias");
      font-size: medium;
    }


    /** If I include AFVerySmallFont, which is defined above, shouldn't that work? 
         I'm getting the attributes in blaf.xss **/
    .VerySmallLinkFont:alias {
      /**includeStyle name="AFVerySmallFont:alias"/**/
      -tr-rule-ref: selector(".AFDefaultFont:alias");
      font-size: xx-small;
    }    

    /** Same problem as above **/
    .SmallLinkFont:alias {
      /**includeStyle name="AFSmallFont:alias"/**/
      -tr-rule-ref: selector(".AFDefaultFont:alias");
      font-size: xx-small;    
    }    
} }
/* end ie and windows,ppc */
  
@platform blackberry {
   @agent blackberry {
    
    .AFDefaultFont:alias {
      -tr-rule-ref: selector(".AFDefaultFontFamily:alias");
      font-size: x-small;
    }

    .AFVerySmallFont:alias {
      -tr-rule-ref: selector(".AFDefaultFont:alias");
      font-size: xx-small;
    }


    .AFSmallFont:alias {
      -tr-rule-ref: selector(".AFDefaultFont:alias");
      font-size: xx-small;
    }

    .AFMediumFont:alias {
      -tr-rule-ref: selector(".AFDefaultFont:alias");
      font-size: x-small;
    }

    .AFLargeFont:alias {
      -tr-rule-ref: selector(".AFDefaultFont:alias");
      font-size: small;
    }

    .AFVeryLargeFont:alias {
      -tr-rule-ref: selector(".AFDefaultFont:alias");
      font-size: medium;
    }


    /** If I include AFVerySmallFont, which is defined above, shouldn't that work? 
         I'm getting the attributes in blaf.xss **/
    .VerySmallLinkFont:alias {
      /**includeStyle name="AFVerySmallFont:alias"/**/
      -tr-rule-ref: selector(".AFDefaultFont:alias");
      font-size: xx-small;
    }    

    /** Same problem as above **/
    .SmallLinkFont:alias {
      /**includeStyle name="AFSmallFont:alias"/**/
      -tr-rule-ref: selector(".AFDefaultFont:alias");
      font-size: xx-small;    
    }    

    /** Since button elements, which have their own background, will no 
         longer be used for BlackBerry, we need to set the background for
         input elements which can act as buttons **/
    input[type='submit'] {
      -tr-rule-ref: selector(".AFLightAccentBackground:alias");
    }
    
    input[type='button'] {
      -tr-rule-ref: selector(".AFLightAccentBackground:alias");
    } 
    
}   } 
/* end blackberry */
