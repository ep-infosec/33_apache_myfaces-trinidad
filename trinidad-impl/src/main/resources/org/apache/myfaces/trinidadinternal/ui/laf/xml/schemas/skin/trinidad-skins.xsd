<?xml version="1.0" encoding="windows-1252"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema"
            xmlns:skin="http://myfaces.apache.org/trinidad/skin"
            targetNamespace="http://myfaces.apache.org/trinidad/skin"
            elementFormDefault="qualified">
  <xsd:element name="skins" type="skin:skinsType">
    <xsd:annotation>
      <xsd:documentation>The root element defined in the trinidad-skins document.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="skinsType">
    <xsd:sequence>
      <xsd:element name="skin" maxOccurs="unbounded" minOccurs="0" type="skin:skinType">
        <xsd:annotation>
          <xsd:documentation>Defines a skin.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="skin-addition" maxOccurs="unbounded" minOccurs="0"
                   type="skin:skinAdditionType">
        <xsd:annotation>
          <xsd:documentation>Defines a skin addition. A skin addition which is created by custom
                             component developers to add skinning information for the custom
                             component.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="featuresType">
    <xsd:sequence minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="feature" type="skin:featureType">
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="featureType">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="name" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Key for locating this feature at run-time.</xsd:documentation>
        </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="skinType">
    <xsd:all>
      <xsd:element name="id" type="string" minOccurs="1" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>A string identifier which uniquely identifies this custom skin
                             implementation.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="family" type="string" minOccurs="1" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>A name which identifies the skin family to which this skin
                             implementation belongs.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="version" type="skin:versionType" minOccurs="0" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>The version of the skin, if any.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>      
      <xsd:element name="render-kit-id" type="string" minOccurs="0" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>This value determines which render kit to use for the skin. You can
                             enter one of the following: org.apache.myfaces.trinidad.desktop: The
                             skin will automatically be used when the application is rendered on a
                             desktop. org.apache.myfaces.trinidad.pda: The skin will be used when
                             rendered on a PDA.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="features" type="skin:featuresType" minOccurs="0" maxOccurs="1">
      <xsd:annotation>
          <xsd:documentation>Collection of features that a skin may require during rendering.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="extends" type="string" minOccurs="0" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>The id of the parent skin which this custom look and feel extends.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="style-sheet-name" type="anyURI" minOccurs="0" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>The name of the style sheet which defines the styles for this custom
                             skin.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="skin:bundleSource" minOccurs="0" maxOccurs="1" />
      <xsd:element ref="skin:metadata" minOccurs="0" maxOccurs="1" />
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="versionType">
    <xsd:all>
      <xsd:element name="name" maxOccurs="1" minOccurs="0" type="string">
        <xsd:annotation>
          <xsd:documentation>Defines a skin version name.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="default" maxOccurs="1" minOccurs="0" type="boolean">
        <xsd:annotation>
          <xsd:documentation>true if this skin is the default skin for the specified skin family. 
          The default skin will be picked if the trinidad-config's skin-version is not set
          or it is set to "default".</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="skinAdditionType">
    <xsd:sequence>
      <xsd:element name="skin-id" type="string" minOccurs="1" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>A string identifier which uniquely identifies the skin you are pushing
                             your styles into, usually simple.desktop.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="style-sheet-name" type="anyURI" minOccurs="0" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>The name of the style sheet which defines the styles for this skin
                             addition.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="skin:bundleSource" minOccurs="0" maxOccurs="1" />
      <xsd:element name="features" type="skin:featuresType" minOccurs="0" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>Collection of features that a skin may require during rendering.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="skin:metadata" minOccurs="0" maxOccurs="1" />    
    </xsd:sequence>
  </xsd:complexType>
  <!-- Use XSD "inheritance" of the substitution group to avoid the use of xsd:choice as it
    is not allowed in an xsd:all element -->
  <xsd:element name="bundleSource" type="xsd:string" abstract="true" />
  <xsd:element name="bundle-name" type="xsd:string" substitutionGroup="skin:bundleSource">
    <xsd:annotation>
      <xsd:documentation>Name of the bundle for this skin or skin addition. For skins, by default,
                         the custom skin inherits the translations that are provided by the
                         its parent skin. The custom skin can override any customizable message
                         by defining its own ResourceBundles.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="translation-source" type="xsd:string" substitutionGroup="skin:bundleSource">
    <xsd:annotation>
      <xsd:documentation>This is an EL binding that can point to a Map or a ResourceBundle.
                         You can use this instead of the bundle-name if you would like to be
                         more dynamic in your skin translations at runtime. bundle-name takes
                         precedence.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>


  <xsd:element name="metadata">
    <xsd:annotation>
      <xsd:documentation>A placeholder element for any custom metadata that applications
        would want to add to their skins and skin additions.
      </xsd:documentation>
    </xsd:annotation>
     <xsd:complexType>
       <xsd:sequence>
         <xsd:element ref="skin:metadata-item" minOccurs="0" maxOccurs="unbounded" />
       </xsd:sequence>
     </xsd:complexType>
   </xsd:element>

  <xsd:element name="metadata-item" abstract="true">
   <xsd:annotation>
     <xsd:documentation>To enable other XML schemas to define their own metadata
                      items, this abstract metadata-item element is defined to
                      serve as a substitution group. Any elements in the metadata-item
                      substitution group will be allowed inside of the metadata element.
     </xsd:documentation>
   </xsd:annotation>
  </xsd:element>

</xsd:schema>


